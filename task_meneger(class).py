# Менеджер задач
# Задача: Создай класс Task, который позволяет управлять задачами (делами).
# У задачи должны быть атрибуты: описание задачи, срок выполнения и статус (выполнено/не выполнено).
# Реализуй функцию для добавления задач, отметки выполненных задач и вывода списка текущих (не выполненных) задач.

class Task:
    def __init__(self, description, due_date):
        self.description = description  # описание задачи
        self.due_date = due_date  # срок выполнения задачи
        self.status = False  # статус задачи (False - не выполнена, True - выполнена)

    def mark_as_done(self):
        """Отметить задачу как выполненную"""
        self.status = True

    def is_done(self):
        """Проверить, выполнена ли задача"""
        return self.status

    def __str__(self):
        """Возвращает строковое представление задачи"""
        status = "Выполнено" if self.status else "Не выполнено" # если self.status истинно (не None, не False, не пустое значение и т.д.), то переменной status присваивается строка "Выполнено", а если self.status ложно, то присваивается строка "Не выполнено".
        return f"{self.description} | Срок: {self.due_date} | Статус: {status}"

class TaskManager:
    def __init__(self):
        self.tasks = []  # Список задач

    def add_task(self, description, due_date):
        """Добавить новую задачу"""
        task = Task(description, due_date)
        self.tasks.append(task)

    def mark_task_done(self, task_index):
        """Отметить задачу как выполненную по индексу"""
        if 0 <= task_index < len(self.tasks):
            self.tasks[task_index].mark_as_done()
        else:
            print("Задача с таким индексом не найдена.")

    def show_current_tasks(self):
        """Показать все невыполненные задачи"""
        current_tasks = [task for task in self.tasks if not task.is_done()] # Результатом является новый список current_tasks, который содержит все задачи из self.tasks, для которых метод is_done() возвращает False (то есть, не выполненные задачи).
        if current_tasks:
            print("Невыполненные задачи:")
            for task in current_tasks:
                print(task)
        else:
            print("Нет невыполненных задач.")

# Пример использования:

# Создание менеджера задач
manager = TaskManager()

# Добавление задач
manager.add_task("Сделать домашку", "2025-01-12")
manager.add_task("Купить продукты", "2025-01-11")
manager.add_task("Починить компьютер", "2025-01-15")

# Отметим одну задачу как выполненную
manager.mark_task_done(1)

# Показать текущие (невыполненные) задачи
manager.show_current_tasks()


# Описание работы программы:
# 1. Класс Task:
#    Инициализирует задачу с описанием, сроком выполнения и статусом.
#    Метод mark_as_done() меняет статус задачи на выполненную.
#    Метод is_done() проверяет, выполнена ли задача.
#    Метод __str__() выводит информацию о задаче.
# 2. Класс TaskManager:
#    Инициализирует менеджер задач. Хранит список задач.
#    Метод add_task() добавляет задачу в список.
#    Метод mark_task_done() позволяет отметить задачу как выполненную, указав её индекс в списке.
#    Метод show_current_tasks() выводит все невыполненные задачи.

# Пример использования:
# Мы создаем менеджер задач.
# Добавляем несколько задач с различными сроками выполнения.
# Отмечаем одну из задач как выполненную.
# Выводим список оставшихся невыполненных задач.
# Этот код позволяет эффективно управлять задачами, добавлять их, изменять статус и отображать невыполненные задачи.